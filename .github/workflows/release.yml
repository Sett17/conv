name: Release
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to create and use in the release'
        required: true
        default: ''

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            ext: ''
          - os: windows-latest
            goos: windows
            goarch: amd64
            ext: '.exe'
          - os: macos-latest
            goos: darwin
            goarch: amd64
            ext: ''

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go 1.22
      uses: actions/setup-go@v4
      with:
        go-version: 1.22

    - name: Build binary
      run: |
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o conv-${{ matrix.goos }}${{ matrix.ext }}

    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: conv-${{ matrix.goos }}${{ matrix.ext }}
        path: ./conv-${{ matrix.goos }}${{ matrix.ext }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download Linux artifact
      uses: actions/download-artifact@v3
      with:
        name: conv-linux
        path: ./conv-linux

    - name: Download Windows artifact
      uses: actions/download-artifact@v3
      with:
        name: conv-windows.exe
        path: ./conv-windows.exe

    - name: Download macOS artifact
      uses: actions/download-artifact@v3
      with:
        name: conv-darwin
        path: ./conv-darwin

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.tag }}
        release_name: Release ${{ github.event.inputs.tag }}
        draft: false
        prerelease: false

    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./conv-linux/conv-linux
        asset_name: conv-linux
        asset_content_type: application/octet-stream

    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./conv-windows.exe/conv-windows.exe
        asset_name: conv-windows.exe
        asset_content_type: application/octet-stream

    - name: Upload macOS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./conv-darwin/conv-darwin
        asset_name: conv-darwin
        asset_content_type: application/octet-stream
